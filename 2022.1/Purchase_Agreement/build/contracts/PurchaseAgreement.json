{
  "contractName": "PurchaseAgreement",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBuyer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlySeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "buyer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seller",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum PurchaseAgreement.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmPurchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paySeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "abort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmPurchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paySeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum PurchaseAgreement.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidState()\":[{\"notice\":\"A fun\\u00e7\\u00e3o nao pode ser chamada no estado atual\"}],\"OnlyBuyer()\":[{\"notice\":\"Only the buyer can call this function\"}],\"OnlySeller()\":[{\"notice\":\"Only the seller can call this function\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PurchaseAgreement.sol\":\"PurchaseAgreement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PurchaseAgreement.sol\":{\"keccak256\":\"0xa9363536e941ae2bab99767b7f6ce9df986ede99b9a01b3c33d29e16f9a6c182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aebb1110f94f9542ff8c95b80e5ba6434db053dfdba98373f3228822c7037bf9\",\"dweb:/ipfs/QmVGZcNdZMo7sCsa8rky1wkbKJNJry2qiYBpj8HkTWToMj\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002346100529190610096565b6000819055506100c7565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006100a18261005d565b91506100ac8361005d565b9250826100bc576100bb610067565b5b828204905092915050565b6109de806100d66000396000f3fe6080604052600436106100705760003560e01c806373fac6f01161004e57806373fac6f0146100e2578063a0c97bce146100f9578063c19d93fb14610110578063d69606971461013b57610070565b806308551a531461007557806335a063b4146100a05780637150d8ae146100b7575b600080fd5b34801561008157600080fd5b5061008a610145565b60405161009791906107c5565b60405180910390f35b3480156100ac57600080fd5b506100b561016b565b005b3480156100c357600080fd5b506100cc6102f7565b6040516100d991906107c5565b60405180910390f35b3480156100ee57600080fd5b506100f761031d565b005b34801561010557600080fd5b5061010e6104aa565b005b34801561011c57600080fd5b50610125610644565b6040516101329190610857565b60405180910390f35b610143610657565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f2576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806003811115610207576102066107e0565b5b600260149054906101000a900460ff166003811115610229576102286107e0565b5b14610260576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff02191690836003811115610286576102856107e0565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102f3573d6000803e3d6000fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060038111156103b9576103b86107e0565b5b600260149054906101000a900460ff1660038111156103db576103da6107e0565b5b14610412576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060146101000a81548160ff02191690836003811115610437576104366107e0565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f193505050501580156104a6573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610531576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002806003811115610546576105456107e0565b5b600260149054906101000a900460ff166003811115610568576105676107e0565b5b1461059f576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff021916908360038111156105c5576105c46107e0565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361061591906108ab565b9081150290604051600060405180830381858888f19350505050158015610640573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600080600381111561066c5761066b6107e0565b5b600260149054906101000a900460ff16600381111561068e5761068d6107e0565b5b146106c5576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026106d491906108ab565b3414610715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070c90610988565b60405180910390fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff0219169083600381111561077c5761077b6107e0565b5b021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107af82610784565b9050919050565b6107bf816107a4565b82525050565b60006020820190506107da60008301846107b6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106108205761081f6107e0565b5b50565b60008190506108318261080f565b919050565b600061084182610823565b9050919050565b61085181610836565b82525050565b600060208201905061086c6000830184610848565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108b682610872565b91506108c183610872565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108fa576108f961087c565b5b828202905092915050565b600082825260208201905092915050565b7f506c656173652073656e6420696e20327820746865207075726368656173652060008201527f616d6f756e740000000000000000000000000000000000000000000000000000602082015250565b6000610972602683610905565b915061097d82610916565b604082019050919050565b600060208201905081810360008301526109a181610965565b905091905056fea26469706673582212205a70c4e931ba084c207db319b684746351c01e8e8a43985d86e63a5cbc2230a864736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c806373fac6f01161004e57806373fac6f0146100e2578063a0c97bce146100f9578063c19d93fb14610110578063d69606971461013b57610070565b806308551a531461007557806335a063b4146100a05780637150d8ae146100b7575b600080fd5b34801561008157600080fd5b5061008a610145565b60405161009791906107c5565b60405180910390f35b3480156100ac57600080fd5b506100b561016b565b005b3480156100c357600080fd5b506100cc6102f7565b6040516100d991906107c5565b60405180910390f35b3480156100ee57600080fd5b506100f761031d565b005b34801561010557600080fd5b5061010e6104aa565b005b34801561011c57600080fd5b50610125610644565b6040516101329190610857565b60405180910390f35b610143610657565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101f2576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806003811115610207576102066107e0565b5b600260149054906101000a900460ff166003811115610229576102286107e0565b5b14610260576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff02191690836003811115610286576102856107e0565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156102f3573d6000803e3d6000fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a4576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060038111156103b9576103b86107e0565b5b600260149054906101000a900460ff1660038111156103db576103da6107e0565b5b14610412576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028060146101000a81548160ff02191690836003811115610437576104366107e0565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f193505050501580156104a6573d6000803e3d6000fd5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610531576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002806003811115610546576105456107e0565b5b600260149054906101000a900460ff166003811115610568576105676107e0565b5b1461059f576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003600260146101000a81548160ff021916908360038111156105c5576105c46107e0565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361061591906108ab565b9081150290604051600060405180830381858888f19350505050158015610640573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600080600381111561066c5761066b6107e0565b5b600260149054906101000a900460ff16600381111561068e5761068d6107e0565b5b146106c5576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026106d491906108ab565b3414610715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070c90610988565b60405180910390fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff0219169083600381111561077c5761077b6107e0565b5b021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107af82610784565b9050919050565b6107bf816107a4565b82525050565b60006020820190506107da60008301846107b6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106108205761081f6107e0565b5b50565b60008190506108318261080f565b919050565b600061084182610823565b9050919050565b61085181610836565b82525050565b600060208201905061086c6000830184610848565b92915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108b682610872565b91506108c183610872565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108fa576108f961087c565b5b828202905092915050565b600082825260208201905092915050565b7f506c656173652073656e6420696e20327820746865207075726368656173652060008201527f616d6f756e740000000000000000000000000000000000000000000000000000602082015250565b6000610972602683610905565b915061097d82610916565b604082019050919050565b600060208201905081810360008301526109a181610965565b905091905056fea26469706673582212205a70c4e931ba084c207db319b684746351c01e8e8a43985d86e63a5cbc2230a864736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:650:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "138:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "128:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "128:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:2",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "225:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "256:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "259:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:15:2"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "90:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "304:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "314:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "314:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "314:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "421:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "411:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "442:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "435:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "435:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "276:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "504:143:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "514:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "537:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "519:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "514:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "548:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "571:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "553:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "548:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "595:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "597:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "597:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "597:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "592:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "585:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:9:2"
                  },
                  "nodeType": "YulIf",
                  "src": "582:35:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "627:14:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "636:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "639:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "632:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "627:1:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "493:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "496:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "502:1:2",
                "type": ""
              }
            ],
            "src": "462:185:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3440:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "202:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "231:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "213:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "202:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "174:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "184:7:2",
                "type": ""
              }
            ],
            "src": "139:104:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "330:61:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "347:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "378:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "352:25:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "352:32:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:45:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "340:45:2"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "318:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "325:3:2",
                "type": ""
              }
            ],
            "src": "249:142:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:140:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "533:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "521:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "617:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "557:59:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:87:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "557:87:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "483:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "495:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "506:4:2",
                "type": ""
              }
            ],
            "src": "397:254:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "685:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "702:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "705:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "695:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "695:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "695:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "802:4:2",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "792:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "792:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "792:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "823:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "826:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "816:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "816:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "816:15:2"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "657:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "894:62:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "928:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "930:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "930:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "930:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "917:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "924:1:2",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "914:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "914:12:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "907:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:20:2"
                  },
                  "nodeType": "YulIf",
                  "src": "904:46:2"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$45",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "887:5:2",
                "type": ""
              }
            ],
            "src": "843:113:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1015:74:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1025:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1036:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1025:7:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1077:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$45",
                      "nodeType": "YulIdentifier",
                      "src": "1042:34:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1042:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1042:41:2"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$45",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "997:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1007:7:2",
                "type": ""
              }
            ],
            "src": "962:127:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1161:61:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1171:45:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1210:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$45",
                      "nodeType": "YulIdentifier",
                      "src": "1184:25:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1184:32:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1171:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$45_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1141:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1151:9:2",
                "type": ""
              }
            ],
            "src": "1095:127:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1299:72:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1316:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1358:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$45_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1321:36:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1321:43:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1309:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1309:56:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1309:56:2"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$45_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1287:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1294:3:2",
                "type": ""
              }
            ],
            "src": "1228:143:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1481:130:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1491:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1503:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1514:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1499:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1491:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1577:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1590:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1601:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1586:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1586:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$45_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1527:49:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1527:77:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1527:77:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$45__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1453:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:2",
                "type": ""
              }
            ],
            "src": "1377:234:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1662:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1672:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1683:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1672:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1644:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1654:7:2",
                "type": ""
              }
            ],
            "src": "1617:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1728:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1745:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1748:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1738:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1738:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1738:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1842:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1845:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1835:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1835:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1835:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1869:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1859:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1859:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1859:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1700:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1934:300:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1944:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1967:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1949:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "1944:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1978:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2001:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1983:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1983:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "1978:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2176:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2178:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2178:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2178:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2088:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2081:6:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2081:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2074:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2074:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2096:1:2"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2103:66:2",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2171:1:2"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2099:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2099:74:2"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2093:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2093:81:2"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2070:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2070:105:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2067:131:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2208:20:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2223:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2226:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2219:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2219:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2208:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "1917:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "1920:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "1926:7:2",
                "type": ""
              }
            ],
            "src": "1886:348:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2336:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2353:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2358:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2346:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2346:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2346:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2374:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2393:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2398:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2389:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2389:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2374:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2308:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2313:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2324:11:2",
                "type": ""
              }
            ],
            "src": "2240:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2521:119:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2543:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2551:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2539:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2539:14:2"
                      },
                      {
                        "hexValue": "506c656173652073656e6420696e203278207468652070757263686561736520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2555:34:2",
                        "type": "",
                        "value": "Please send in 2x the purchease "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2532:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2611:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2619:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:15:2"
                      },
                      {
                        "hexValue": "616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2624:8:2",
                        "type": "",
                        "value": "amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2600:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2600:33:2"
                }
              ]
            },
            "name": "store_literal_in_memory_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2513:6:2",
                "type": ""
              }
            ],
            "src": "2415:225:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2792:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2802:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2868:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2873:2:2",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2809:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2809:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2802:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2974:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae",
                      "nodeType": "YulIdentifier",
                      "src": "2885:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2885:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2885:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2987:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2998:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3003:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2994:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2987:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2780:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2788:3:2",
                "type": ""
              }
            ],
            "src": "2646:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3189:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3199:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3211:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3222:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3207:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3207:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3199:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3246:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3257:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3242:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3242:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3265:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3271:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3261:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3261:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3235:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3235:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3235:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3291:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3425:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3299:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3299:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3291:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3169:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3184:4:2",
                "type": ""
              }
            ],
            "src": "3018:419:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$45(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$45(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$45(value)\n    }\n\n    function convert_t_enum$_State_$45_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$45(value)\n    }\n\n    function abi_encode_t_enum$_State_$45_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$45_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$45__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$45_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please send in 2x the purchease \")\n\n        mstore(add(memPtr, 32), \"amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "61:2678:1:-:0;;;498:10;481:6;;:28;;;;;;;;;;;;;;;;;;540:1;528:9;:13;;;;:::i;:::-;520:5;:21;;;;61:2678;;7:77:2;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;462:185;502:1;519:20;537:1;519:20;:::i;:::-;514:25;;553:20;571:1;553:20;:::i;:::-;548:25;;592:1;582:35;;597:18;;:::i;:::-;582:35;639:1;636;632:9;627:14;;462:185;;;;:::o;61:2678:1:-;;;;;;;",
  "deployedSourceMap": "61:2678:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;118:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2581:155;;;;;;;;;;;;;:::i;:::-;;154:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2026:140;;;;;;;;;;;;;:::i;:::-;;2311:143;;;;;;;;;;;;;:::i;:::-;;252:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1653:230;;;:::i;:::-;;118:29;;;;;;;;;;;;;:::o;2581:155::-;1421:6;;;;;;;;;;;1407:20;;:10;:20;;;1404:71;;1451:12;;;;;;;;;;;;;;1404:71;2626:13:::1;1003:6;994:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;991:68;;1033:14;;;;;;;;;;;;;;991:68;2660:14:::2;2652:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2685:6;;;;;;;;;;;:15;;:38;2701:21;2685:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1485:1:::1;2581:155::o:0;154:28::-;;;;;;;;;;;;;:::o;2026:140::-;1212:5;;;;;;;;;;;1198:19;;:10;:19;;;1195:69;;1241:11;;;;;;;;;;;;;;1195:69;2080:12:::1;1003:6;994:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;991:68;;1033:14;;;;;;;;;;;;;;991:68;2113:13:::2;2105:5:::0;::::2;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2137:5;;;;;;;;;;;:14;;:21;2152:5;;2137:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1274:1:::1;2026:140::o:0;2311:143::-;1421:6;;;;;;;;;;;1407:20;;:10;:20;;;1404:71;;1451:12;;;;;;;;;;;;;;1404:71;2362:13:::1;1003:6;994:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;991:68;;1033:14;;;;;;;;;;;;;;991:68;2395:14:::2;2387:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2420:6;;;;;;;;;;;:15;;:26;2440:5;;2436:1;:9;;;;:::i;:::-;2420:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;1485:1:::1;2311:143::o:0;252:18::-;;;;;;;;;;;;;:::o;1653:230::-;1697:13;1003:6;994:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;991:68;;1033:14;;;;;;;;;;;;;;991:68;1757:5:::1;;1753:1;:9;;;;:::i;:::-;1739;:24;1731:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1833:10;1817:5;;:27;;;;;;;;;;;;;;;;;;1863:12;1855:5;;:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1653:230:::0;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:180::-;705:77;702:1;695:88;802:4;799:1;792:15;826:4;823:1;816:15;843:113;924:1;917:5;914:12;904:46;;930:18;;:::i;:::-;904:46;843:113;:::o;962:127::-;1007:7;1036:5;1025:16;;1042:41;1077:5;1042:41;:::i;:::-;962:127;;;:::o;1095:::-;1151:9;1184:32;1210:5;1184:32;:::i;:::-;1171:45;;1095:127;;;:::o;1228:143::-;1321:43;1358:5;1321:43;:::i;:::-;1316:3;1309:56;1228:143;;:::o;1377:234::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:77;1601:1;1590:9;1586:17;1577:6;1527:77;:::i;:::-;1377:234;;;;:::o;1617:77::-;1654:7;1683:5;1672:16;;1617:77;;;:::o;1700:180::-;1748:77;1745:1;1738:88;1845:4;1842:1;1835:15;1869:4;1866:1;1859:15;1886:348;1926:7;1949:20;1967:1;1949:20;:::i;:::-;1944:25;;1983:20;2001:1;1983:20;:::i;:::-;1978:25;;2171:1;2103:66;2099:74;2096:1;2093:81;2088:1;2081:9;2074:17;2070:105;2067:131;;;2178:18;;:::i;:::-;2067:131;2226:1;2223;2219:9;2208:20;;1886:348;;;;:::o;2240:169::-;2324:11;2358:6;2353:3;2346:19;2398:4;2393:3;2389:14;2374:29;;2240:169;;;;:::o;2415:225::-;2555:34;2551:1;2543:6;2539:14;2532:58;2624:8;2619:2;2611:6;2607:15;2600:33;2415:225;:::o;2646:366::-;2788:3;2809:67;2873:2;2868:3;2809:67;:::i;:::-;2802:74;;2885:93;2974:3;2885:93;:::i;:::-;3003:2;2998:3;2994:12;2987:19;;2646:366;;;:::o;3018:419::-;3184:4;3222:2;3211:9;3207:18;3199:26;;3271:9;3265:4;3261:20;3257:1;3246:9;3242:17;3235:47;3299:131;3425:4;3299:131;:::i;:::-;3291:139;;3018:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.10;\r\n\r\ncontract PurchaseAgreement {\r\n    \r\n    uint value;\r\n    address payable public seller;\r\n    address payable public buyer;\r\n\r\n    \r\n    enum State { Created, Locked, Release, Inactive }\r\n    State public state;\r\n\r\n   //este construtor determina que aquele que chamar o contrato sera o vendedor e que o custo do item sera metade do valor enviado, a outra parte servira como garantia\r\n    constructor() payable {\r\n        seller = payable(msg.sender);\r\n        value = msg.value / 2;\r\n    }\r\n\r\n    //abaixo estao os erros para cada instante especifico\r\n    \r\n    /// A função nao pode ser chamada no estado atual\r\n    error InvalidState();\r\n    ///Only the buyer can call this function\r\n    error OnlyBuyer();\r\n    ///Only the seller can call this function\r\n    error OnlySeller();\r\n\r\n    //este modificador so permite que a função seja executada se esta estiver no estado correto\r\n    modifier inState(State _state) {\r\n        if(state != _state) {\r\n            revert InvalidState();\r\n        }\r\n        _;\r\n    }\r\n\r\n    // modificador que garante que so o comprador pode executar as ações \r\n    modifier onlyBuyer() {\r\n        if(msg.sender != buyer) {\r\n            revert OnlyBuyer();\r\n        }\r\n        _;\r\n    }\r\n\r\n    //modificador que garante que somente o vendedor pode executar as ações \r\n    modifier onlySeller() {\r\n        if(msg.sender != seller) {\r\n            revert OnlySeller();\r\n        }\r\n        _;\r\n    }\r\n\r\n    //esta função só pode ser executada por alguem de fora do contrat(no caso o comprador) e serve para armazenar o valor mais o extra de garantia\r\n    function confirmPurchase() external inState(State.Created) payable {\r\n        require(msg.value == (2 * value), \"Please send in 2x the purchease amount\");\r\n        buyer = payable(msg.sender);\r\n        state = State.Locked;\r\n    }\r\n\r\n    //esta função serve para que quando o comprador receba seu item comprado, ele possa retirar o valor extra que foi como garantia\r\n    function confirmReceived() external onlyBuyer inState(State.Locked) {\r\n        state = State.Release;\r\n        buyer.transfer(value);\r\n    }\r\n\r\n    //esta função serve para que apos o comprador receber seu item, o vendedor possa retirar o valor de garantia mais o custo do item\r\n    function paySeller() external onlySeller() inState(State.Release){\r\n        state = State.Inactive;\r\n        seller.transfer(3 * value);\r\n    }\r\n\r\n    //esta função serve para que caso o comprador desista de comprar o item, o vendedor possa rertirar seu dinehiro\r\n    function abort() external onlySeller inState(State.Created) {\r\n        state = State.Inactive;\r\n        seller.transfer(address(this).balance); \r\n        }\r\n}",
  "sourcePath": "C:\\Users\\luyco\\OneDrive\\Área de Trabalho\\BI\\treinando\\contracts\\PurchaseAgreement.sol",
  "ast": {
    "absolutePath": "project:/contracts/PurchaseAgreement.sol",
    "exportedSymbols": {
      "PurchaseAgreement": [
        219
      ]
    },
    "id": 220,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PurchaseAgreement",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219
        ],
        "name": "PurchaseAgreement",
        "nameLocation": "70:17:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "106:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "101:10:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "101:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 38,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "141:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "118:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "118:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 40,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "177:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "154:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PurchaseAgreement.State",
            "id": 45,
            "members": [
              {
                "id": 41,
                "name": "Created",
                "nameLocation": "210:7:1",
                "nodeType": "EnumValue",
                "src": "210:7:1"
              },
              {
                "id": 42,
                "name": "Locked",
                "nameLocation": "219:6:1",
                "nodeType": "EnumValue",
                "src": "219:6:1"
              },
              {
                "id": 43,
                "name": "Release",
                "nameLocation": "227:7:1",
                "nodeType": "EnumValue",
                "src": "227:7:1"
              },
              {
                "id": 44,
                "name": "Inactive",
                "nameLocation": "236:8:1",
                "nodeType": "EnumValue",
                "src": "236:8:1"
              }
            ],
            "name": "State",
            "nameLocation": "202:5:1",
            "nodeType": "EnumDefinition",
            "src": "197:49:1"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 48,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "265:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "252:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$45",
              "typeString": "enum PurchaseAgreement.State"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "252:5:1"
              },
              "referencedDeclaration": 45,
              "src": "252:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$45",
                "typeString": "enum PurchaseAgreement.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "470:79:1",
              "statements": [
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "481:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "498:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "498:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "490:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "490:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "481:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "481:28:1"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "520:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 60,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "528:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "528:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "540:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "528:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "520:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "520:21:1"
                }
              ]
            },
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:2:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:1"
            },
            "scope": 219,
            "src": "448:101:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "622:51:1",
              "text": "A função nao pode ser chamada no estado atual"
            },
            "id": 70,
            "name": "InvalidState",
            "nameLocation": "685:12:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:1"
            },
            "src": "679:21:1"
          },
          {
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "706:40:1",
              "text": "Only the buyer can call this function"
            },
            "id": 73,
            "name": "OnlyBuyer",
            "nameLocation": "758:9:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:2:1"
            },
            "src": "752:18:1"
          },
          {
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "776:41:1",
              "text": "Only the seller can call this function"
            },
            "id": 76,
            "name": "OnlySeller",
            "nameLocation": "829:10:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:1"
            },
            "src": "823:19:1"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "980:98:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "994:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 82,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1003:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "994:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88,
                  "nodeType": "IfStatement",
                  "src": "991:68:1",
                  "trueBody": {
                    "id": 87,
                    "nodeType": "Block",
                    "src": "1011:48:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 84,
                            "name": "InvalidState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1033:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1033:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86,
                        "nodeType": "RevertStatement",
                        "src": "1026:21:1"
                      }
                    ]
                  }
                },
                {
                  "id": 89,
                  "nodeType": "PlaceholderStatement",
                  "src": "1069:1:1"
                }
              ]
            },
            "id": 91,
            "name": "inState",
            "nameLocation": "958:7:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "972:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "966:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$45",
                    "typeString": "enum PurchaseAgreement.State"
                  },
                  "typeName": {
                    "id": 78,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45,
                      "src": "966:5:1"
                    },
                    "referencedDeclaration": 45,
                    "src": "966:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:14:1"
            },
            "src": "949:129:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "1184:99:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 93,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1198:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1198:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 95,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1212:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1198:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1195:69:1",
                  "trueBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1219:45:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 97,
                            "name": "OnlyBuyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "1241:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1241:11:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "RevertStatement",
                        "src": "1234:18:1"
                      }
                    ]
                  }
                },
                {
                  "id": 102,
                  "nodeType": "PlaceholderStatement",
                  "src": "1274:1:1"
                }
              ]
            },
            "id": 104,
            "name": "onlyBuyer",
            "nameLocation": "1172:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:1"
            },
            "src": "1163:120:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1393:101:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 106,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1407:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1407:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 108,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1421:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1407:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "IfStatement",
                  "src": "1404:71:1",
                  "trueBody": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "1429:46:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 110,
                            "name": "OnlySeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "1451:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1451:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "RevertStatement",
                        "src": "1444:19:1"
                      }
                    ]
                  }
                },
                {
                  "id": 115,
                  "nodeType": "PlaceholderStatement",
                  "src": "1485:1:1"
                }
              ]
            },
            "id": 117,
            "name": "onlySeller",
            "nameLocation": "1380:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:2:1"
            },
            "src": "1371:123:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1720:163:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1739:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1739:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1753:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 128,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36,
                                "src": "1757:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1753:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 130,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1752:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1739:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073656e6420696e203278207468652070757263686561736520616d6f756e74",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1765:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae",
                          "typeString": "literal_string \"Please send in 2x the purchease amount\""
                        },
                        "value": "Please send in 2x the purchease amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae",
                          "typeString": "literal_string \"Please send in 2x the purchease amount\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1731:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:75:1"
                },
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1817:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 138,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1833:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1833:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1825:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1825:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1825:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1817:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:27:1"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1855:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 144,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1863:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "1863:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "1855:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:20:1"
                }
              ]
            },
            "functionSelector": "d6960697",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 120,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1697:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 41,
                    "src": "1697:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 119,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "1689:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1689:22:1"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "1662:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1677:2:1"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:0:1"
            },
            "scope": 219,
            "src": "1653:230:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2094:72:1",
              "statements": [
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2105:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 159,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2113:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "2113:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "2105:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2152:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 163,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2137:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2137:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:21:1"
                }
              ]
            },
            "functionSelector": "73fac6f0",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 151,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "2062:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2062:9:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 154,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2080:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 42,
                    "src": "2080:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 153,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2072:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2072:21:1"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2035:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2050:2:1"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:0:1"
            },
            "scope": 219,
            "src": "2026:140:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2376:78:1",
              "statements": [
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 179,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2387:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 180,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2395:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2395:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "2387:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2436:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 188,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2440:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2436:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 184,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2420:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2420:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:26:1"
                }
              ]
            },
            "functionSelector": "a0c97bce",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 172,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "2341:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2341:12:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 175,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2362:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43,
                    "src": "2362:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 174,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2354:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2354:22:1"
              }
            ],
            "name": "paySeller",
            "nameLocation": "2320:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:2:1"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:0:1"
            },
            "scope": 219,
            "src": "2311:143:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2641:95:1",
              "statements": [
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2652:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 203,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2660:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2660:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "2652:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2652:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 212,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2709:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PurchaseAgreement_$219",
                                "typeString": "contract PurchaseAgreement"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PurchaseAgreement_$219",
                                "typeString": "contract PurchaseAgreement"
                              }
                            ],
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2701:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 210,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2701:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2701:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2701:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 207,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2685:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2685:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:38:1"
                }
              ]
            },
            "functionSelector": "35a063b4",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 195,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "2607:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2607:10:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 198,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2626:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 41,
                    "src": "2626:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 197,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2618:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2618:22:1"
              }
            ],
            "name": "abort",
            "nameLocation": "2590:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2595:2:1"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:0:1"
            },
            "scope": 219,
            "src": "2581:155:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 220,
        "src": "61:2678:1",
        "usedErrors": [
          70,
          73,
          76
        ]
      }
    ],
    "src": "33:2706:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/PurchaseAgreement.sol",
    "exportedSymbols": {
      "PurchaseAgreement": [
        219
      ]
    },
    "id": 220,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PurchaseAgreement",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 219,
        "linearizedBaseContracts": [
          219
        ],
        "name": "PurchaseAgreement",
        "nameLocation": "70:17:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "106:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "101:10:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "101:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 38,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "141:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "118:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "118:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 40,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "177:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "154:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 39,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "154:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PurchaseAgreement.State",
            "id": 45,
            "members": [
              {
                "id": 41,
                "name": "Created",
                "nameLocation": "210:7:1",
                "nodeType": "EnumValue",
                "src": "210:7:1"
              },
              {
                "id": 42,
                "name": "Locked",
                "nameLocation": "219:6:1",
                "nodeType": "EnumValue",
                "src": "219:6:1"
              },
              {
                "id": 43,
                "name": "Release",
                "nameLocation": "227:7:1",
                "nodeType": "EnumValue",
                "src": "227:7:1"
              },
              {
                "id": 44,
                "name": "Inactive",
                "nameLocation": "236:8:1",
                "nodeType": "EnumValue",
                "src": "236:8:1"
              }
            ],
            "name": "State",
            "nameLocation": "202:5:1",
            "nodeType": "EnumDefinition",
            "src": "197:49:1"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 48,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "265:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 219,
            "src": "252:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$45",
              "typeString": "enum PurchaseAgreement.State"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "252:5:1"
              },
              "referencedDeclaration": 45,
              "src": "252:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$45",
                "typeString": "enum PurchaseAgreement.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "470:79:1",
              "statements": [
                {
                  "expression": {
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "481:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "498:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "498:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "490:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "490:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "490:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "481:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "481:28:1"
                },
                {
                  "expression": {
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "520:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 60,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "528:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "528:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "540:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "528:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "520:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "520:21:1"
                }
              ]
            },
            "id": 67,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:2:1"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:0:1"
            },
            "scope": 219,
            "src": "448:101:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 68,
              "nodeType": "StructuredDocumentation",
              "src": "622:51:1",
              "text": "A função nao pode ser chamada no estado atual"
            },
            "id": 70,
            "name": "InvalidState",
            "nameLocation": "685:12:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:1"
            },
            "src": "679:21:1"
          },
          {
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "706:40:1",
              "text": "Only the buyer can call this function"
            },
            "id": 73,
            "name": "OnlyBuyer",
            "nameLocation": "758:9:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:2:1"
            },
            "src": "752:18:1"
          },
          {
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "776:41:1",
              "text": "Only the seller can call this function"
            },
            "id": 76,
            "name": "OnlySeller",
            "nameLocation": "829:10:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:1"
            },
            "src": "823:19:1"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "980:98:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 81,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "994:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 82,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1003:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "994:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88,
                  "nodeType": "IfStatement",
                  "src": "991:68:1",
                  "trueBody": {
                    "id": 87,
                    "nodeType": "Block",
                    "src": "1011:48:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 84,
                            "name": "InvalidState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1033:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1033:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86,
                        "nodeType": "RevertStatement",
                        "src": "1026:21:1"
                      }
                    ]
                  }
                },
                {
                  "id": 89,
                  "nodeType": "PlaceholderStatement",
                  "src": "1069:1:1"
                }
              ]
            },
            "id": 91,
            "name": "inState",
            "nameLocation": "958:7:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "972:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "966:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$45",
                    "typeString": "enum PurchaseAgreement.State"
                  },
                  "typeName": {
                    "id": 78,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 77,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 45,
                      "src": "966:5:1"
                    },
                    "referencedDeclaration": 45,
                    "src": "966:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:14:1"
            },
            "src": "949:129:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "1184:99:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 93,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1198:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1198:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 95,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1212:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1198:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 101,
                  "nodeType": "IfStatement",
                  "src": "1195:69:1",
                  "trueBody": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "1219:45:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 97,
                            "name": "OnlyBuyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "1241:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1241:11:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 99,
                        "nodeType": "RevertStatement",
                        "src": "1234:18:1"
                      }
                    ]
                  }
                },
                {
                  "id": 102,
                  "nodeType": "PlaceholderStatement",
                  "src": "1274:1:1"
                }
              ]
            },
            "id": 104,
            "name": "onlyBuyer",
            "nameLocation": "1172:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:1"
            },
            "src": "1163:120:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1393:101:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 106,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1407:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1407:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 108,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1421:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1407:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 114,
                  "nodeType": "IfStatement",
                  "src": "1404:71:1",
                  "trueBody": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "1429:46:1",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 110,
                            "name": "OnlySeller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76,
                            "src": "1451:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1451:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 112,
                        "nodeType": "RevertStatement",
                        "src": "1444:19:1"
                      }
                    ]
                  }
                },
                {
                  "id": 115,
                  "nodeType": "PlaceholderStatement",
                  "src": "1485:1:1"
                }
              ]
            },
            "id": 117,
            "name": "onlySeller",
            "nameLocation": "1380:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1390:2:1"
            },
            "src": "1371:123:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 148,
              "nodeType": "Block",
              "src": "1720:163:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 125,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1739:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1739:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1753:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 128,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36,
                                "src": "1757:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1753:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 130,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1752:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1739:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c656173652073656e6420696e203278207468652070757263686561736520616d6f756e74",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1765:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae",
                          "typeString": "literal_string \"Please send in 2x the purchease amount\""
                        },
                        "value": "Please send in 2x the purchease amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e51b2b209cf9dc8621ecb9cea75794b79885d7f628bb2a286027689bb8dfe4ae",
                          "typeString": "literal_string \"Please send in 2x the purchease amount\""
                        }
                      ],
                      "id": 124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1731:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1731:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1731:75:1"
                },
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1817:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 138,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1833:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1833:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1825:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1825:8:1",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1825:19:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1817:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:27:1"
                },
                {
                  "expression": {
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1855:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 144,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1863:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "1863:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "1855:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1855:20:1"
                }
              ]
            },
            "functionSelector": "d6960697",
            "id": 149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 120,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1697:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 41,
                    "src": "1697:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 119,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "1689:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1689:22:1"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "1662:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1677:2:1"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1720:0:1"
            },
            "scope": 219,
            "src": "1653:230:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "2094:72:1",
              "statements": [
                {
                  "expression": {
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 158,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2105:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 159,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2113:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "2113:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "2105:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2105:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2152:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 163,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "2137:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2137:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:21:1"
                }
              ]
            },
            "functionSelector": "73fac6f0",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 152,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 151,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 104,
                  "src": "2062:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2062:9:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 154,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2080:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 42,
                    "src": "2080:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 153,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2072:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2072:21:1"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2035:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2050:2:1"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:0:1"
            },
            "scope": 219,
            "src": "2026:140:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2376:78:1",
              "statements": [
                {
                  "expression": {
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 179,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2387:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 180,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2395:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2395:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "2387:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2387:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2436:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 188,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2440:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2436:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 184,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2420:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2420:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2420:26:1"
                }
              ]
            },
            "functionSelector": "a0c97bce",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 173,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 172,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "2341:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2341:12:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 175,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2362:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43,
                    "src": "2362:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 177,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 174,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2354:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2354:22:1"
              }
            ],
            "name": "paySeller",
            "nameLocation": "2320:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2329:2:1"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2376:0:1"
            },
            "scope": 219,
            "src": "2311:143:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2641:95:1",
              "statements": [
                {
                  "expression": {
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2652:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 203,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "2660:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                          "typeString": "type(enum PurchaseAgreement.State)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "2660:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$45",
                        "typeString": "enum PurchaseAgreement.State"
                      }
                    },
                    "src": "2652:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2652:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 212,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2709:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PurchaseAgreement_$219",
                                "typeString": "contract PurchaseAgreement"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PurchaseAgreement_$219",
                                "typeString": "contract PurchaseAgreement"
                              }
                            ],
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2701:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 210,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2701:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2701:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2701:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 207,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2685:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2685:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:38:1"
                }
              ]
            },
            "functionSelector": "35a063b4",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 195,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 117,
                  "src": "2607:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2607:10:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 198,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "2626:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$45_$",
                        "typeString": "type(enum PurchaseAgreement.State)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 41,
                    "src": "2626:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$45",
                      "typeString": "enum PurchaseAgreement.State"
                    }
                  }
                ],
                "id": 200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 197,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 91,
                  "src": "2618:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2618:22:1"
              }
            ],
            "name": "abort",
            "nameLocation": "2590:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2595:2:1"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:0:1"
            },
            "scope": 219,
            "src": "2581:155:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 220,
        "src": "61:2678:1",
        "usedErrors": [
          70,
          73,
          76
        ]
      }
    ],
    "src": "33:2706:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x606b7f963FD588F86B19Cd6A13D0a7C68980B31C",
      "transactionHash": "0xd2e151e61c044c1b358f7fc16fdc9860b4a56f7ad90c8d3def6eb662b831c341"
    },
    "1651515144905": {
      "events": {},
      "links": {},
      "address": "0x8E4090AEf1912c29A36d3243bC1d6627E81d2bFa",
      "transactionHash": "0x1e19bf62964797f6f8d93456929dcc354ebd04fcbea9bbe3a9bdfaa1ff2424c7"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-05-02T20:47:44.816Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidState()": [
        {
          "notice": "A função nao pode ser chamada no estado atual"
        }
      ],
      "OnlyBuyer()": [
        {
          "notice": "Only the buyer can call this function"
        }
      ],
      "OnlySeller()": [
        {
          "notice": "Only the seller can call this function"
        }
      ]
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}